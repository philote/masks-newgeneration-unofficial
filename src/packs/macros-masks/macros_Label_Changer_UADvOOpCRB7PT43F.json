{
  "name": "Label Changer",
  "type": "script",
  "author": "PIYJckcNzA7ukurN",
  "img": "icons/commodities/treasure/mask-jeweled-gold.webp",
  "scope": "global",
  "command": "const version = 'v1.0';\nconst chatimage = \"icons/commodities/treasure/mask-jeweled-gold.webp\";\n\n/* Label Changer\nIMPORTANT\n- \n\nTODO\n- \nsource: \nicon: \n*/\n\n\n// Requires at least 1 target\nlet tokenD;\n\nif (canvas.tokens.controlled[0]===undefined){\n  ui.notifications.error(\"You must select a token!\");    \n} else {\n  tokenD=canvas.tokens.controlled[0];\n  main();\n}\n\nfunction getStats(labelType) {\n  switch (labelType) {\n    case 'danger': return [tokenD.actor.data.data.stats.danger.label, token.actor.data.data.stats.danger.value];\n    case 'freak': return [tokenD.actor.data.data.stats.freak.label, token.actor.data.data.stats.freak.value];\n    case 'savior': return [tokenD.actor.data.data.stats.savior.label, token.actor.data.data.stats.savior.value];\n    case 'superior': return [tokenD.actor.data.data.stats.superior.label, token.actor.data.data.stats.superior.value];\n    case 'mundane': return [tokenD.actor.data.data.stats.mundane.label, token.actor.data.data.stats.mundane.value];\n    default: ui.notifications.error(\"666!\");    \n  }  \n}\n\nfunction main() {  \n  let labelList = ``;\n  labelList += `<option value=\"danger\">Danger</option>`;\n  labelList += `<option value=\"freak\">Freak</option>`;\n  labelList += `<option value=\"savior\">Savior</option>`;\n  labelList += `<option value=\"superior\">Superior</option>`;\n  labelList += `<option value=\"mundane\">Mundane</option>`;  \n\n  let currentLabelList = ``;\n  currentLabelList += `<li>Danger: ${getStats('danger')[1]}</li>`;  \n  currentLabelList += `<li>Freak: ${getStats('freak')[1]}</li>`;\n  currentLabelList += `<li>Savior: ${getStats('savior')[1]}</li>`;\n  currentLabelList += `<li>Superior: ${getStats('superior')[1]}</li>`;\n  currentLabelList += `<li>Mundane: ${getStats('mundane')[1]}</li>`;  \n  \n  let template = `  \n    <style type=\"text/css\">\n      div.purpleHorizon {\n        border: 4px solid #ff0000;\n        background-color: #000000;\n        width: 100%;\n        text-align: center;\n        border-collapse: collapse;\n      }\n      .divTable.purpleHorizon .divTableCell, .divTable.purpleHorizon .divTableHead {\n        border: 0px solid #550000;\n        padding: 5px 2px;\n      }\n      .divTable.purpleHorizon .divTableBody .divTableCell {\n        font-size: 13px;\n        font-weight: bold;\n        color: #FFFFFF;\n      }\n      \n      .divTable{ display: table; }\n      .divTableRow { display: table-row; }\n      .divTableHeading { display: table-header-group;}\n      .divTableCell, .divTableHead { display: table-cell;}\n      .divTableHeading { display: table-header-group;}\n      .divTableFoot { display: table-footer-group;}\n      .divTableBody { display: table-row-group;}\n\n      /* HIDE RADIO */\n      [type=radio] { \n      position: absolute;\n      opacity: 0;\n      width: 0;\n      height: 0;\n      }\n\n      /* IMAGE STYLES */\n      [type=radio] + img {\n      cursor: pointer;\n      }\n\n      /* CHECKED STYLES */\n      [type=radio]:checked + img {\n      outline: 4px solid #f00;\n      }\n      \n      .container {\n        position: relative;\n        text-align: center;\n        color: white;\n      }\n      /* Centered text */\n      .centered {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 18px;\n      }    \n\n      #kultcss .window-content {    \n        background: #000000;\n      }     \n      #kultcss .dialog-button {\n        height: 40px;\n        background: #000000;\n        color: #ffffff;\n        justify-content: space-evenly;\n        align-items: center;\n        cursor: pointer;\n        border: none;    \n      }  \n      #kultcss header {\n        background: #000000;\n        border-radius: 0;    \n        border: none;    \n        margin-bottom: 2px;\n        font-size: .75rem;\n      }\n    </style>    \n    \n    <h2 style=\"color: #FFFFFF;\">Current Labels</h2>\n    <ul style=\"color: #FFFFFF;\">\n      ${currentLabelList}\n    </ul>\n    \n    <h2 style=\"color: #FFFFFF;\">Set up the change</h2>\n    <div class=\"divTable purpleHorizon\">\n    <div class=\"divTableBody\">\n        \n    <div class=\"divTableRow\">\n    <div class=\"divTableCell\">\n        <p>Which label will go up?</p>\n        <select id=\"labelup\" type=\"text\" style=\"width: 100px; box-sizing: border-box;border: none;background-color: #ff0000;color: white; text-align: center;\">\n          ${labelList}\n        </select>      \n    </div>\n    <div class=\"divTableCell\">\n        <p>Which label will go down?</p>\n        <select id=\"labeldown\" type=\"text\" style=\"width: 100px; box-sizing: border-box;border: none;background-color: #ff0000;color: white; text-align: center;\">\n          ${labelList}\n        </select>      \n    </div>     \n    </div>\n   \n    </div>\n    </div>\n    \n  `;\n  \n  new Dialog({\n    title: `Label Changer - ${version}`,\n    content: template,\n    buttons: {\n      ok: {\n        label: \"Change!\",\n        callback: async (html) => {\n          changeLabel(html);\n        },\n      },\n      cancel: {\n        label: \"Cancel\",\n      }\n    },\n    default: \"ok\"\n  }, { id: 'kultcss'}).render(true);\n}\n\nasync function changeLabel(html) {\n  const labelup = html.find(\"#labelup\")[0].value;    \n  const labeldown = html.find(\"#labeldown\")[0].value;    \n  let message=``;\n  \n  message += `<h2>Label Changer</h2>`;  \n\n  if ( (getStats(labelup)[1]+1)>3 || (getStats(labeldown)[1]-1)<-3 ) {\n    message += `<p>No shift at all occurs. Instead, you mark a <b style=\"color:blue\">condition</b>!.</p>`;\n  } else {\n    message += `<p><b style=\"color:darkred\">${labelup}</b> will go up and  <b style=\"color:red\">${labeldown}</b> will go down.</p>`;\n    await updateLabel(labelup, 1);\n    await updateLabel(labeldown, -1);\n  }\n\n  // send message1\n  let chatData = {\n    content: message\n  };  \n  ChatMessage.create(chatData, {});  \n}\n\nasync function updateLabel(labelName, val) { // +1 or -1\n  let character = game.actors.contents.filter((t) => t.data.type === \"character\").filter((v) => v.id === tokenD.actor.id)[0];\n\n  let currentLabelValue = getStats(labelName)[1];\n  let newValue = val + currentLabelValue;\n  \n  console.log(labelName);\n  \n  switch (labelName) {\n    case 'danger': await character.update({['data.stats.danger.value']: newValue}); break;\n    case 'freak': await character.update({['data.stats.freak.value']: newValue}); break;\n    case 'savior': await character.update({['data.stats.savior.value']: newValue}); break;\n    case 'superior': await character.update({['data.stats.superior.value']: newValue}); break;\n    case 'mundane': await character.update({['data.stats.mundane.value']: newValue}); break;\n    default: ui.notifications.error(\"666!\");    \n  }  \n  \n}",
  "folder": null,
  "sort": 0,
  "flags": {
    "furnace": {
      "runAsGM": false
    },
    "combat-utility-belt": {
      "macroTrigger": ""
    },
    "core": {
      "sourceId": "Macro.xE89nUW1UWwS3yGN"
    }
  },
  "_id": "UADvOOpCRB7PT43F",
  "_stats": {
    "coreVersion": "12.324",
    "systemId": null,
    "systemVersion": null,
    "createdTime": null,
    "modifiedTime": null,
    "lastModifiedBy": null,
    "compendiumSource": null,
    "duplicateSource": null
  },
  "ownership": {
    "default": 2,
    "PIYJckcNzA7ukurN": 3
  },
  "_key": "!macros!UADvOOpCRB7PT43F"
}
